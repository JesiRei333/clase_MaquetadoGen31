/* Reset -va primero-: le quita el margin y padding a todas las etiquetas de la pagina*/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }


  
  .box {
    width: 100px;
    height: 100px;
    background-color: red;
    color: white;
    margin: 10px;
    font-size: 30px;
    text-align: center;
  }
  
  /* Posicioamientos */
 
 
  /* position relative: habilita las propiedades de direccion:top, left, bottom, right. */
 
      .posicionRelativa {
    position: relative;
  }
  
  /* El movimiento nace de la esquina superior izquierda. Para mover el elemento desde el lado derecho se usan valores negativos*/
  .cajaRelativa {
    top: 50px;
    left: -10px;
    /* right y bottom se invalidan al usar top y left (solo podemos usar dos propiedades  a la vez )*/
  }
  
  /* Position: Fixed los elementos fixed se posicionan o fijan a la ventana del navegador (Window) tambien desbloquean las propiedades top rigth*/
  .posicionFixed {
    position: fixed;
    top: 0;
    right: 0;
  }
  
  .box.boxAzul.posicionFixed { /*para buscar va sin espacios*/
    z-index: 2; /* z-index nos permite elegir la capa de posicion de  los elementos que tengan  una posicion diferente a  static */
  }
  
    
  
    /* position absolute */ 
    /* hay 2 casos:
          1) los elementos se posicionan de forma absoluta con el documento
          2) los elementos se posicionan de forma absoluta con el primer elemento padre contenedor cuya posicion sea RELATIVA
  */
  .posicionAbsoluta {
    position: absolute;
  }
  
  .cajaAbsoluta1 {
    top: 0;
    left: 120px;
  }
  
  .contenedorRelativo {
    width: 400px;
    height: 350px;
    border: 2px solid red;
    background-color: #e3e3e3;
  }
  
  .contenedorRelativo .posicionAbsoluta {
    top: 0;
    left: 0;
  }
  

  /* position sticky */
  /*Los elementos sticky es una combinacion entre position relative y absolute.
    Comienzan siendo relativos, cuando hacemos scroll dentro del padre contenedor, se hacen fixed dentro ( necesitan tener un padre contenedor). */


  .posicionSticky {
    position: sticky;
    top: 0;
    left: 0;
  }
  
  .title {
    background-color: #3498db;
    padding: 10px;
    color: white;
  }
  
  .stickyContainer {
    border: 5px solid #3498db;
  }
  




  .boxAzul {
    background-color: blue;
  }
  
  .boxVerde {
    background-color: green;
  }
  
  .galeria {
    width: 450px;
    height: 300px;
    border: 1px solid #e3e3e3;
  }
  
  /* Animaciones y transiciones */
  
  /* Transiciones
    las transiciones, hacen que el cambio
    de propiedad de css como el background-color
    al hacer hover se vea mas fluio 
   */
  .impressive-button {
    font-size: 16px;
    padding: 10px 20px;
    background-color: #3498db;
    color: #fff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 300ms , transform 300ms ease-in-out;
  }

  .impressive-button:hover {
    background-color: #5d85a0;
    transform: scale(0.6);
  }
  
  /* La propiedad transfom hace que 
  cuando damos click en el botón este se
   haga más grande o pequeño según le indiques*/
   



  .imgHover {
    transition: all 500ms ease-in-out;
  }
  
  .imgHover:hover {
    filter: invert(0.8);
  }
  
  
  .container {
    width: 650px;
    height: 250px;
    background-color: #e3e3e3;
    position: relative;
    padding: 20px;
    margin: 50px 0;
  }
  
  /* Animaciones */
  
  /* 
    animacion css 
    el nombre de la animacion de mover-cuadro
    en las animaciones hay que definir lo que 
    sucede en cada frame que compone la animacion
  
  */
  
  .circle {
    width: 50px;
    height: 50px;
    background-color: #3498db;
    border-radius: 50%;
    position: absolute;
    /* animation: 
      nombre de la animacion, duracion, efecto, al usar infinite, nuestra animacion nunca se detendra */
    animation: moveCircle 5s linear infinite reverse;
    /* animation: moveCircle 4s linear infinite;  */
    /* 4s duration, linear easing, infinite loop */
  }
  
  @keyframes moveCircle {
    0% {
      left: 0;
      background-color: red;
    }
    50% {
      background-color: yellow;
      left: 600px;
      border-radius: 0;
    }
    100% {
      background-color: #3498db;
      left: 0;
    }
  }